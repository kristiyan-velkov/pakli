// import { create } from "zustand";
// import { persist } from "zustand/middleware";
// import { getOutages } from "./getters/getOutages";

// export enum ServiceType {
//   Water = "water",
//   Electricity = "electricity",
//   Heating = "heating",
// }

// export enum Severity {
//   Low = "low",
//   Medium = "medium",
//   High = "high",
// }

// export enum ViewMode {
//   Map = "map",
//   List = "list",
// }

// export enum MapType {
//   Leaflet = "leaflet",
//   Mapbox = "mapbox",
//   Google = "google",
// }

// export interface Outage {
//   id: string;
//   source: string;
//   area: string;
//   type: string;
//   category: string;
//   description: string;
//   start: string;
//   end: string;
//   timestamp: string;
//   serviceType: ServiceType;
//   district: string;
//   severity: Severity;
// }

// export interface User {
//   id?: string;
//   name: string;
//   email: string;
//   address: string;
//   password?: string;
//   city: string;
//   district: string;
//   notifications?: boolean;
//   emailNotifications?: boolean;
// }

// export interface Subscription {
//   active: boolean;
//   expiresAt: string;
//   paymentMethod: string;
//   amount: number;
//   currency: string;
//   startDate: string;
// }

// interface FilterState {
//   searchQuery: string;
//   selectedService: string;
//   selectedCategory: string;
//   selectedType: string;
//   showOnlyUserDistrict: boolean;
// }

// interface AppState {
//   user: User | null;
//   subscription: Subscription | null;
//   setUser: (user: User | null) => void;
//   setSubscription: (subscription: Subscription | null) => void;

//   outages: Outage[];
//   filteredOutages: Outage[];
//   selectedOutage: Outage | null;
//   userNotifications: Outage[];
//   setOutages: (outages: Outage[]) => void;
//   setSelectedOutage: (outage: Outage | null) => void;

//   viewMode: ViewMode;
//   mapType: MapType;
//   loading: boolean;
//   error: string | null;
//   showPaymentModal: boolean;
//   setViewMode: (mode: ViewMode) => void;
//   setMapType: (type: MapType) => void;
//   setLoading: (loading: boolean) => void;
//   setError: (error: string | null) => void;
//   setShowPaymentModal: (show: boolean) => void;

//   filters: FilterState;
//   setSearchQuery: (query: string) => void;
//   setSelectedService: (service: string) => void;
//   setSelectedCategory: (category: string) => void;
//   setSelectedType: (type: string) => void;
//   setShowOnlyUserDistrict: (show: boolean) => void;
//   resetFilters: () => void;

//   applyFilters: () => void;
// }

// function transformApiToOutage(apiData: any): Outage {
//   const rawServiceType =
//     apiData.serviceType || apiData.service_type || apiData.type || ServiceType.Water;

//   const serviceType = Object.values(ServiceType).includes(rawServiceType)
//     ? rawServiceType
//     : ServiceType.Water;

//   const severity = Object.values(Severity).includes(apiData.severity)
//     ? apiData.severity
//     : apiData.priority ?? Severity.Medium;

//   return {
//     id: apiData.id,
//     source: apiData.source,
//     area: apiData.affectedArea ?? apiData.location?.address ?? apiData.area ?? "Неизвестна зона",
//     type: apiData.category === "emergency" ? "Аварийно спиране" : "Планирано спиране",
//     category: apiData.category,
//     description: apiData.description,
//     start: apiData.startTime,
//     end: apiData.endTime,
//     timestamp: apiData.startTime,
//     serviceType: serviceType as ServiceType,
//     district: apiData.location?.district ?? apiData.district ?? "Неизвестен",
//     severity: severity as Severity,
//   };
// }



// function filterOutages(
//   outages: Outage[],
//   user: User | null,
//   filters: FilterState,
//   subscription: Subscription | null
// ): { filtered: Outage[]; notifications: Outage[] } {
//   const { selectedService, selectedCategory, selectedType, searchQuery, showOnlyUserDistrict } = filters;
//   const normalizedQuery = searchQuery.trim().toLowerCase();

//   const filtered = outages.filter((outage) => {
//     if (
//       user &&
//       showOnlyUserDistrict &&
//       outage.district.toLowerCase() !== user.district.toLowerCase()
//     )
//       return false;
//     if (
//       normalizedQuery &&
//       !outage.area.toLowerCase().includes(normalizedQuery) &&
//       !outage.description.toLowerCase().includes(normalizedQuery) &&
//       !outage.district.toLowerCase().includes(normalizedQuery)
//     )
//       return false;
//     if (selectedService !== "all" && outage.serviceType !== selectedService) return false;
//     if (selectedCategory !== "all" && outage.category !== selectedCategory) return false;
//     const isEmergency = outage.type.toLowerCase().includes("аварийно");
//     if (selectedType === "emergency" && !isEmergency) return false;
//     if (selectedType === "scheduled" && isEmergency) return false;
//     return true;
//   });

//   const notifications =
//     user && subscription?.active
//       ? filtered.filter(
//           (o) =>
//             o.district.toLowerCase() === user.district.toLowerCase() &&
//             o.severity === Severity.High
//         )
//       : [];

//   return { filtered, notifications };
// }

// export const useAppStore = create<AppState>()(
//   persist(
//     (set, get) => ({
//       user: null,
//       subscription: null,
//       setUser: (user: User | null) => set({ user }),
//       setSubscription: (subscription: Subscription | null) => set({ subscription }),

//       outages: [],
//       filteredOutages: [],
//       selectedOutage: null,
//       userNotifications: [],
//       setOutages: (outages: Outage[]) => set({ outages }),
//       setSelectedOutage: (outage: Outage | null) => set({ selectedOutage: outage }),

//       viewMode: ViewMode.Map,
//       mapType: MapType.Google,
//       loading: false,
//       error: null,
//       showPaymentModal: false,
//       setViewMode: (mode: ViewMode) => set({ viewMode: mode }),
//       setMapType: (type: MapType) => set({ mapType: type }),
//       setLoading: (loading: boolean) => set({ loading }),
//       setError: (error: string | null) => set({ error }),
//       setShowPaymentModal: (show: boolean) => set({ showPaymentModal: show }),

//       filters: {
//         searchQuery: "",
//         selectedService: "all",
//         selectedCategory: "all",
//         selectedType: "all",
//         showOnlyUserDistrict: true,
//       },
//       setSearchQuery: (query: string) =>
//         set((state) => ({
//           filters: { ...state.filters, searchQuery: query },
//         })),
//       setSelectedService: (service: string) =>
//         set((state) => ({
//           filters: { ...state.filters, selectedService: service },
//         })),
//       setSelectedCategory: (category: string) =>
//         set((state) => ({
//           filters: { ...state.filters, selectedCategory: category },
//         })),
//       setSelectedType: (type: string) =>
//         set((state) => ({
//           filters: { ...state.filters, selectedType: type },
//         })),
//       setShowOnlyUserDistrict: (show: boolean) =>
//         set((state) => ({
//           filters: { ...state.filters, showOnlyUserDistrict: show },
//         })),
//       resetFilters: () =>
//         set((state) => ({
//           filters: {
//             searchQuery: "",
//             selectedService: "all",
//             selectedCategory: "all",
//             selectedType: "all",
//             showOnlyUserDistrict: state.filters.showOnlyUserDistrict,
//           },
//         })),

//       applyFilters: () => {
//         const { outages, user, filters, subscription } = get();
//         const { filtered, notifications } = filterOutages(outages, user, filters, subscription);
//         set({ filteredOutages: filtered, userNotifications: notifications });
//       },

//       fetchOutages: async () => {
//         const { setLoading, setError, setOutages, applyFilters } = get();

//         try {
//           setLoading(true);
//           setError(null);

//           let outagesData = await getOutages();

//           if(outagesData.length > 0) {
//             outagesData = outagesData.map(transformApiToOutage);
//             setOutages(outagesData);
//             set((state) => ({
//               selectedOutage: null,
//             }));
//             applyFilters();
//           }
//         } catch (error) {
//           console.error("Error fetching outages:", error);
//           setError("Възникна грешка при зареждане на данните");
//           applyFilters();
//         } finally {
//           setLoading(false);
//         }
//       },
//     }),
//     {
//       name: "pakli-storage",
//       partialize: (state) => ({
//         user: state.user,
//         subscription: state.subscription,
//         mapType: state.mapType,
//         viewMode: state.viewMode,
//       }),
//     }
//   )
// );
